require("luarocks.loader")
require("posix")
require("solidrocket/utils/path")
require("solidrocket/utils/text")


context("solidrocket", function()
  context("utils", function()
    context("path", function()
      test("join", function()
        local path = Path()
        assert_equal(path.path_separator, '/')
        assert_equal(path:join({'abc'}), 'abc')
        assert_equal(path:join({'abc', 'def'}), 'abc/def')
        assert_equal(path:join({'abc/tmp/foo', 'def'}), 'abc/tmp/foo/def')
        
        local path2 = Path("\\")
        assert_equal(path2.path_separator, "\\")
        assert_equal(path2:join({'abc'}), 'abc')
        assert_equal(path2:join({'abc', 'def'}), 'abc\\def')
      end)
      
      test("split", function()
        local path = Path()
        assert_equal(#path:split('abc'), 1)
        assert_equal(#path:split('abc/def'), 2)
        assert_equal(#path:split('/abc/def'), 2)
      end)
      
      test("dirname", function()
        local path = Path()
        assert_equal(path:dirname('/abc/def/ghi'), '/abc/def')
        assert_equal(path:dirname('/abc/def'), '/abc')
        assert_equal(path:dirname('/abc'), '/')
        assert_equal(path:dirname('abc'), '')
      end)
      
      test("basename", function()
        local path = Path()
        assert_equal(path:basename('/abc/def/ghi'), 'ghi')
        assert_equal(path:basename('/abc/def'), 'def')
        assert_equal(path:basename('/abc'), '/abc')
        assert_equal(path:basename('abc'), 'abc')
      end)
      
      test("normpath", function()
        local path = Path()
        assert_equal(path:normpath('/abc'), '/abc')
        assert_equal(path:normpath('/abc/def'), '/abc/def')
        assert_equal(path:normpath('/abc/def/ghi'), '/abc/def/ghi')
        assert_equal(path:normpath('/'), '/')
        assert_equal(path:normpath('/abc/def/..'), '/abc')
        assert_equal(path:normpath('/abc/def/../ghi'), '/abc/ghi')
        assert_equal(path:normpath('/abc/../def/../ghi'), '/ghi')
        assert_equal(path:normpath('/abc/../../../def/../ghi'), '/ghi')
        assert_equal(path:normpath('abc/../def/../ghi'), 'ghi')
        assert_equal(path:normpath('abc/../../../def/../ghi'), '../../ghi')
      end)
      
      test("abspath", function()
        local path = Path()
        local current_cwd = posix.getcwd()
        local abs_path = string.format('%s/abc/def', current_cwd)
        assert_equal(path:abspath('abc/def'), abs_path)
      end)
    end)
    
    context("text", function()
      test("split", function()
        assert_equal(text.split('abc')[1], 'abc')
        assert_equal(text.split('abc def')[1], 'abc')
        assert_equal(text.split('abc def')[2], 'def')
        assert_equal(text.split('abc def ghi')[1], 'abc')
        assert_equal(text.split('abc def ghi')[2], 'def')
        assert_equal(text.split('abc def ghi')[3], 'ghi')
        assert_equal(text.split('abc def/ghi')[1], 'abc')
        assert_equal(text.split('abc def/ghi')[2], 'def/ghi')
        assert_equal(text.split('abc def/ghi', '/')[1], 'abc def')
        assert_equal(text.split('abc def/ghi', '/')[2], 'ghi')
      end)
      
      test("slugify", function()
        assert_equal(text.slugify('abc'), 'abc')
        assert_equal(text.slugify('abc def'), 'abc-def')
        assert_equal(text.slugify('abc_def'), 'abc_def')
        assert_equal(text.slugify('abc.def'), 'abc.def')
        assert_equal(text.slugify('AaBbCc_DdEeFf'), 'aabbcc_ddeeff')
        assert_equal(text.slugify('a#$%b_-c(*$).\\d{e>f'), 'ab_-c.def')
        assert_equal(text.slugify('abc/../../../etc/passwd'), 'abc......etcpasswd')
      end)
      
      test("check_key", function()
        assert_true(text.check_key('abc'))
        assert_true(text.check_key('ABC'))
        assert_true(text.check_key('123'))
        assert_true(text.check_key('_.-'))
        assert_true(text.check_key('Zanzabar_-kungfoo.1095472'))
        assert_false(text.check_key('&(!^#^abc'))
        assert_false(text.check_key('blah blah'))
      end)
    end)
  end)
end)
